console.log('App.js is running!');

// JSX - JavaScript XML - adding State to React Component

class Counter extends React.Component {
    constructor(props){
        super(props);
        this.handleAddOne = this.handleAddOne.bind(this);
        this.handleMinusOne = this.handleMinusOne.bind(this);
        this.handleReset = this.handleReset.bind(this);
        this.state = {
            count : 0      
        };
    }
    handleAddOne(){
        console.log('handleAddOne');
        this.setState((prevState)=>{
           return { count :prevState.count + 1 }; // only the object that needs change in the state is modified.
        });       
    }
    handleMinusOne(){
        console.log('handleMinusOne');
        this.setState((prevState) => {
            return { count:prevState.count -1 };  // we will need to minus from current state value
         });
    }
    handleReset(){
        console.log('handleReset');
        this.setState(()=>{
            return {count: 0};
        });
    }
    render(){
        return (
            <div>
                <h1>Count:{this.state.count}</h1>
                <button onClick={this.handleAddOne}>++</button>
                <button onClick={this.handleMinusOne}>--</button>
                <button onClick={this.handleReset}>Reset</button>
            </div>
        )
    }
}
ReactDOM.render(<Counter />, document.getElementById('app'));


// {can have expressions like above and string operation }
